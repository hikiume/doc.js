generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  name        String        @unique
  password    String
  icon        String        @default("")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  note        Note[]
  tag         Tag[]
  NoteHistory NoteHistory[]
  NoteComment NoteComment[]
}

model Tag {
  id        String   @id @default(cuid())
  userId    String
  name      String   @unique
  delete    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  note      Note[]

  user User @relation(fields: [userId], references: [id])
}

model Note {
  id          String        @id @default(cuid())
  userId      String
  title       String
  authority   Boolean       @default(false)
  delete      Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  tag         Tag[]
  NoteComment NoteComment[]
  NoteHistory NoteHistory[]
  noteContent NoteContent?

  user User @relation(fields: [userId], references: [id])
}

model NoteContent {
  noteId    String   @unique
  body      String   @db.MediumText
  updatedAt DateTime @updatedAt

  note Note @relation(fields: [noteId], references: [id])
}

model NoteHistory {
  id        String   @id @default(cuid())
  noteId    String
  userId    String
  body      String   @db.MediumText
  createdAt DateTime @default(now())

  note Note @relation(fields: [noteId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model NoteComment {
  id        String   @id @default(cuid())
  noteId    String
  userId    String
  body      String   @db.MediumText
  delete    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  note Note @relation(fields: [noteId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
